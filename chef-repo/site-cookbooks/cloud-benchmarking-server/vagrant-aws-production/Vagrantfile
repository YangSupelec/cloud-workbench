# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure('2') do |config|
  # Detects vagrant-omnibus plugin
  if Vagrant.has_plugin?('vagrant-omnibus')
    puts 'INFO:  Vagrant-omnibus plugin detected.'
    config.omnibus.chef_version = :latest
  else
    puts "FATAL: Vagrant-omnibus plugin not detected. Please install the plugin with\n
                 'vagrant plugin install vagrant-omnibus' from any other directory\n
                 before continuing."
    exit
  end

  # Detects vagrant-berkshelf plugin
  if Vagrant.has_plugin?('berkshelf')
    # The path to the Berksfile to use with Vagrant Berkshelf
    puts 'INFO:  Vagrant-berkshelf plugin detected.'
    config.berkshelf.enabled = true
    config.berkshelf.berksfile_path = './Berksfile'
  else
    puts "FATAL: Vagrant-berkshelf plugin not detected. Please install the plugin with\n
                 'vagrant plugin install vagrant-berkshelf' from any other directory\n
                 before continuing."
    exit
  end

  # Box
  config.vm.box = 'aws-box'
  config.vm.box_url = 'https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box'

  # VM
  config.vm.hostname = 'chef-server-ec2-production'
  config.ssh.forward_agent = true

  # AWS EC2 provider
  config.vm.provider :aws do |aws, override|
    # AWS authentication
    aws.access_key_id = ENV['AWS_ACCESS_KEY']
    aws.secret_access_key = ENV['AWS_SECRET_KEY']
    
    # AWS instance configuration
    aws.region = "eu-west-1"
    aws.region_config "eu-west-1" do |region|
      # Official Ubuntu 12.04 image from Canonical: https://cloud-images.ubuntu.com/locator/ec2/
      region.ami = "ami-51e91b26"
      region.keypair_name = ENV['EC2_KEYPAIR']
    end
    override.ssh.private_key_path = ENV['EC2_PRIVATE_KEY']
    override.ssh.username = "ubuntu"
    # t1.micro cannot satisfy the memory requirements of the chef-server
    aws.instance_type = "m1.small"
    aws.security_groups = ["aic13-cloud_benchmarking-web"]
    aws.elastic_ip = true # Always creates a new elastic ip
    aws.tags = {
      'Name' => 'CloudBenchmarking-ChefServer-Production'
     }
  end

  # Chef solo provisioning via Berkshelf vendored cookbooks
  config.vm.provision :chef_solo do |chef|
    chef.run_list = [
      'recipe[cloud-benchmarking-server]'
    ]
    chef.json = {
      "appbox": {
        "deploy_keys": [
          "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQCD+BQ5ILiCrn4IIoabtQOz7iAhQV48LfqdSlrxTMIoDrAzKZdyfGlhaRydLz7acdfd/PJG8IzaskinGdQYM3NfkPFniyU72ir07/QykQDbgadEA5XP4o1Tm0hUPs1Wt7OHBWzYxYjhYJN7Rnun7Pc/Xj4D7Dr48FJQUxUvAPLYJQ== joel.scheuner.dev@gmail.com"
          ],
        "admin_keys": [
          "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQCD+BQ5ILiCrn4IIoabtQOz7iAhQV48LfqdSlrxTMIoDrAzKZdyfGlhaRydLz7acdfd/PJG8IzaskinGdQYM3NfkPFniyU72ir07/QykQDbgadEA5XP4o1Tm0hUPs1Wt7OHBWzYxYjhYJN7Rnun7Pc/Xj4D7Dr48FJQUxUvAPLYJQ== joel.scheuner.dev@gmail.com"
          ],
      },
        "databox": {
          "db_root_password": "my_db_root_password",
          "databases": {
          "postgresql": [
            { "username": "cloud",
              "password": "cloud",
              "database_name": "cloud_benchmarking_production" }
          ]
        }
      }
    }
  end
end
