#!<%= @ruby %>

require './benchmark_helper'
require './sysbench-io'
require 'securerandom'

io = IOBench.new

success = io.prepare_benchmark "<%= @file_size %>"
if !success
    fail("Preparing IO benchmark failed!")
end

execute(io, <%= @repetitions %>, "<%= @file_size %>", <%= @max_time %>)

# notify completed
BenchmarkHelper.notify_postprocessing_completed

# helper methods
BEGIN {
    def fail(message)
        BenchmarkHelper.submit_metric(<%= @metric %>, 1, message)
        exit
    end

    def execute(io, times, file_size, max_time)
        cpu = io.find_cpu_info
        batch_id = SecureRandom.uuid
        times.times do |t|
            ioResult = io.run_benchmark(file_size, max_time)
            if !ioResult
                fail("Failed to run IO benchmark!")
            end

            # aggregate and submit result
            aggregatedResult = "Results (#{io.now}):
            Batch: #{batch_id}
            CPU: #{cpu}
            IO Benchmark: #{ioResult}"

            BenchmarkHelper.submit_metric(<%= @metric %>, t, aggregatedResult)
        end
    end
}