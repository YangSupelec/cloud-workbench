# -*- mode: ruby -*-
# vi: set ft=ruby :
require 'json'
Vagrant.configure("2") do |config|
  # Detects vagrant-omnibus plugin
  if Vagrant.has_plugin?('vagrant-omnibus')
    puts 'INFO:  Vagrant-omnibus plugin detected.'
    config.omnibus.chef_version = :latest
  else
    puts "FATAL: Vagrant-omnibus plugin not detected. Please install the plugin with\n
                 'vagrant plugin install vagrant-omnibus' from any other directory\n
                  before continuing."
    exit
  end

  # Detects vagrant-berkshelf plugin
  if Vagrant.has_plugin?('berkshelf')
    # The path to the Berksfile to use with Vagrant Berkshelf
    puts 'INFO:  Vagrant-berkshelf plugin detected.'
    config.berkshelf.berksfile_path = './Berksfile'
    config.berkshelf.enabled = true
  else
    puts "FATAL: Vagrant-berkshelf plugin not detected. Please install the plugin with\n
                 'vagrant plugin install vagrant-berkshelf' from any other directory\n
                 before continuing."
    exit
  end

  # Detects vagrant-cachier plugin
  if Vagrant.has_plugin?('vagrant-cachier')
    puts 'INFO:  Vagrant-cachier plugin detected. Optimizing caches.'
    config.cache.auto_detect = true
    config.cache.enable :chef
    config.cache.enable :apt
    config.cache.enable :gem
  else
    puts 'WARN:  Vagrant-cachier plugin not detected. Continuing unoptimized.'
  end
  
  config.vm.box = 'opscode-ubuntu-12.04'
  config.vm.box_url = 'http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_ubuntu-12.04_chef-provisionerless.box'
  
  config.vm.hostname = 'cloud-benchmarking-server'
  
  config.vm.network :private_network, ip: "33.33.33.10"
  config.ssh.forward_agent = true

  config.vm.provider :virtualbox do |vb|
    # Try to approximate an AWS m1.small instance
    vb.memory = 2500
    vb.cpus = 3
  end
  
  config.vm.provision :chef_solo do |chef|
    # Only if not using berkshelf
    # chef.cookbooks_path = [ '../../cookbooks', '../../site-cookbooks' ]
    chef.log_level = :info
    
    # Ignore warning of empty runlist on "vagrant up" since the runlist from the json is applied.
    # This allows to share the chef configuration with chef solo.
    # Appy run_list and attributes from json
    chef.json = JSON.parse( IO.read('../../nodes/cloud-benchmarking-server.json') )
  end

end
