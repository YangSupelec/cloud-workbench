#!<%= @ruby %>

require './benchmark_helper'
require './sysbench-cpu'
require 'securerandom'

cpu = CPUBenchmark.new

execute(cpu, <%= @repetitions %>, <%= @max_prime %>)

# notify completed
BenchmarkHelper.notify_postprocessing_completed

# helper methods
BEGIN {
    def fail(message)
        BenchmarkHelper.submit_metric(<%= @metric %>, 1, message)
        exit
    end

    def execute(cpu, times, max_time)
        cpu_info = cpu.find_cpu_info
        batch_id = SecureRandom.uuid
        times.times do |t|
            cpu_result = cpu.run_benchmark <%= @max_prime %>
            if !cpu_result
                fail("Failed to run CPU benchmark!")
            end

            # aggregate and submit result
            aggregatedResult = "Results (#{cpu.now}):
            Batch: #{batch_id}
            CPU: #{cpu_info}
            CPU Benchmark: #{cpu_result}"

            BenchmarkHelper.submit_metric(<%= @metric %>, t, aggregatedResult)
        end
    end
}