# -*- mode: ruby -*-
# vi: set ft=ruby :

### Variables
benchmark_name = '<%= benchmark_name %>'
benchmark_name_sanitized = '<%= benchmark_name_sanitized %>'
benchmark_id = <%= benchmark_id %>
execution_id = <%= execution_id %>
chef_node_name = "#{execution_id}-#{benchmark_name_sanitized}"
tag_name = "cwb-#{benchmark_name_sanitized}"
# Private variables
vagrant_id = "cwb-#{benchmark_id}-#{execution_id}"

<% if provider_name == 'azure' %>
azure_common = Proc.new do |azure, override|
  # Authentication
  azure.mgmt_endpoint = 'https://management.core.windows.net'
  azure.mgmt_certificate = ENV['AZURE_MGMT_CERTIFICATE']
  azure.subscription_id = ENV['AZURE_SUBSCRIPTION_ID']
  azure.private_key_file = ENV['EC2_PRIVATE_KEY']
  azure.certificate_file = ENV['AZURE_CERTIFICATE_FILE']

  # Defaults
  azure.vm_name = "cwb-#{execution_id}"
  azure.vm_image = 'b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-14_04-LTS-amd64-server-20140414-en-us-30GB'
  azure.vm_user = 'ubuntu'
  azure.vm_size = 'ExtraSmall'
  azure.vm_location = 'North Europe'
end
<% end %>

### Default configuration
VAGRANTFILE_API_VERSION = "2"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.hostname = "benchmark"

  config.ssh.username = 'ubuntu'
  config.ssh.private_key_path = ENV['EC2_PRIVATE_KEY']

  # Butcher plugin that removes Chef nodes and clients
  if Vagrant.has_plugin?("vagrant-butcher")
    config.butcher.verify_ssl = false
  end

  <% if provider_name == 'aws' %>
  # AWS box
  config.vm.box = "aws"
  config.vm.box_url = 'https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box'

  # AWS EC2 provider
  config.vm.provider :aws do |aws, override|
    # AWS authentication
    aws.access_key_id = ENV['AWS_ACCESS_KEY']
    aws.secret_access_key = ENV['AWS_SECRET_KEY']
    aws.keypair_name = ENV['EC2_KEYPAIR']

    # Official Ubuntu 14.04 LTS AMI (pv:ebs)
    # from Canonical: https://cloud-images.ubuntu.com/locator/ec2/
    aws.ami = "ami-3196f646"

    # AWS default instance configuration
    aws.instance_ready_timeout = 240 # Default is 120
    aws.region = "eu-west-1" # Europe/Ireland as default configuration
    aws.instance_type = "t1.micro"
    aws.security_groups = ["default"]
    aws.tags = {
      'Name' => tag_name
    }
  end
  <% elsif provider_name == 'google' %>
  # Google box
  config.vm.box = 'google'
  config.vm.box_url = 'https://github.com/mitchellh/vagrant-google/raw/master/google.box'

  # Google Compute Engine provider
  config.vm.provider :google do |google, override|
    google.google_project_id = ENV['GOOGLE_PROJECT_ID']
    google.google_client_email = ENV['GOOGLE_CLIENT_EMAIL']
    google.google_key_location = ENV['GOOGLE_KEY_LOCATION']

    override.ssh.username = 'root'
    override.ssh.private_key_path = ENV['EC2_PRIVATE_KEY']

    # Used to uniquely identify the VM
    google.name = vagrant_id
    google.metadata = {'vagrant_id' => vagrant_id}

    # Override provider defaults
    google.image = "debian-7-wheezy-v20140619"
    google.machine_type = "n1-standard-1"
    google.zone = "europe-west1-a"
  end
  <% elsif provider_name == 'azure' %>
  # Azure box
  config.vm.box = 'azure'
  config.vm.box_url = 'https://github.com/msopentech/vagrant-azure/raw/master/dummy.box'

  # See above.
  <% end %>

  # Chef client provisioner
  # :latest would install Chef client version 12 that breaks some cookbooks
  # (e.g. postgresql: https://github.com/hw-cookbooks/postgresql/issues/212 )
  config.omnibus.chef_version = '12.2.1'
  config.vm.provision "chef_client", id: "chef_client" do |chef|
    chef.log_level = :info
    chef.provisioning_path = "/etc/chef"
    chef.chef_server_url = ENV['KNIFE_CHEF_SERVER_URL']
    chef.validation_key_path = ENV['KNIFE_VALIDATION_KEY']

    # MUST be unique in scope of all benchmarks
    chef.node_name = chef_node_name

    chef.run_list = %w(cwb)
    chef.json = {
      'cwb' => {
        'server' => ENV['CWB_SERVER_IP']
      }
    }
  end
end

###### BEGIN custom Vagrantfile ######
<%= vagrantfile %>
