# -*- mode: ruby -*-
# vi: set ft=ruby :
require 'pathname'
# Only for debugging via binding.pry. See: http://pryrepl.org/
#require 'pry'

# Determine whether secret configuration including SSH keys should be updated.
APPLY_SECRET_CONFIG = true

# Username used to ssh into VM instances. Might be 'root' for debian images.
SSH_USERNAME = 'ubuntu'

# Local paths
FILE_DIR = Pathname.new(__FILE__).parent.expand_path
REPO_ROOT = FILE_DIR.parent.parent.expand_path
CONFIG_DIR = FILE_DIR
SITE_COOKBOOKS = "#{REPO_ROOT}/chef-repo/site-cookbooks"
CWB_CHEF_SERVER_ROOT = "#{SITE_COOKBOOKS}/cbench-chef-server"
CWB_SERVER_ROOT = "#{SITE_COOKBOOKS}/cloud-benchmarking-server"

# CWB-Server Default configuration
require_relative "#{CWB_SERVER_ROOT}/vagrant/cwb_config"
require_relative "#{CWB_SERVER_ROOT}/vagrant/hash"
cwb_config = CwbConfig.new(config_dir: CONFIG_DIR,
                           apply_secrets: APPLY_SECRET_CONFIG,
                           ssh_username: SSH_USERNAME)
CHEF_JSON = cwb_config.chef_config


VAGRANTFILE_API_VERSION = '2'
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # Detects vagrant-omnibus plugin
  if Vagrant.has_plugin?('vagrant-omnibus')
    # :latest caused an issue (2014-12-06) with the postgresql cookbook:
    # https://github.com/hw-cookbooks/postgresql/issues/212
    config.omnibus.chef_version = '11.16.4'
  else
    puts "FATAL: Vagrant-omnibus plugin not detected. Please install the plugin with\n
                 'vagrant plugin install vagrant-omnibus' from any other directory\n
                 before continuing."
    exit
  end
  
  # Box
  config.vm.box     = 'aws'
  config.vm.box_url = 'https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box'
  
  # VM
  config.ssh.forward_agent = false
  
  # Amazon EC2
  config.vm.provider :aws do |aws, override|
    # AWS authentication
    aws.access_key_id     = 'AKIAIOSFODNN7EXAMPLE'
    aws.secret_access_key = 'wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY'

    # AWS instance configuration
    aws.region = 'eu-west-1'
    # Official Ubuntu 12.04 LTS amd64 EBS image from Canonical: https://cloud-images.ubuntu.com/locator/ec2/
    aws.ami = 'ami-7aa1010d'
    aws.keypair_name = 'your-aws-key-name'
    override.ssh.private_key_path = '~/.ssh/your-aws-key-name.pem'
    override.ssh.username = SSH_USERNAME
    aws.instance_type = 't2.small'
    aws.security_groups = ['cwb-web']
  end

  ### Chef-Server
  config.vm.define 'chef_server' do |chef_server|
    # VM
    chef_server.vm.hostname = 'chef-server' # MUST not contain spaces

      config.vm.provider :aws do |aws, override|
        aws.tags = {
            'Name' => 'CWB-Chef-Server-Production'
        }
      end

    # Chef solo provisioning via berks-vendored cookbooks
    chef_server.vm.provision :chef_solo do |chef|
      chef.cookbooks_path = "#{CWB_CHEF_SERVER_ROOT}/berks-cookbooks"
      chef.add_recipe 'cbench-chef-server'
      chef.json = {
          'chef-server' => {
              # Current version as of 2014-07-16
              # See: http://www.getchef.com/chef/install/
              'version' => '11.1.6' # or 'latest'
              # Provide if cookbook service is not working correct. Autodetection tried via Ohai (see attributes)
              # 'api_fqdn' => "ec2-54-216-50-158.eu-west-1.compute.amazonaws.com"
          }
      }
    end
  end

  ### CWB-Server
  config.vm.define 'cwb_server', primary: true do |cwb_server|
    # VM
    cwb_server.vm.hostname = 'cwb-server'

    config.vm.provider :aws do |aws, override|
      aws.tags = {
          'Name' => 'CWB-Server-Production'
      }
    end
    
    # Chef solo provisioning via berks-vendored cookbooks
    cwb_server.vm.provision :chef_solo do |chef|
      chef.cookbooks_path = "#{CWB_SERVER_ROOT}/berks-cookbooks"
      chef.provisioning_path = '/etc/chef'
      chef.add_recipe 'cloud-benchmarking-server'
      chef.json = CHEF_JSON.deep_merge(
      {
          'cloud-benchmarking-server' => {
              'delayed_job' => {
                  # Determines how many benchmarks can be prepared, started, or released in parallel.
                  # Keep in mind that workers are memory-intensive since the currently load the entire Rails environment.
                  'worker_processes' => '2'
              },
          },
          # For a list of time zones see: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
          #'tz' => 'Europe/Zurich',
      })
    end
  end
end
